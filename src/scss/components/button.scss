@use 'sass:color';
$sizes: (
	sm: 1rem,
	md: 1.25rem,
	lg: 1.5rem,
);

$sizes-ratio: (
	sm: 8,
	md: 3,
	lg: 3,
);

.u-button {
	@extend .btn;
	@extend .gap-2;
}

.u-button-block {
	width: 100%;
}

.u-button-disabled {
	@extend .disabled;
}

.u-button-elevation-0 {
	box-shadow: none;
}

.u-button-loading {
	@extend .btn-loading;
}

.u-button-shape-circle {
	border-radius: 50%;
	padding: 0;
	&.u-button-size-sm {
		height: 1.447rem;
		width: 1.447rem;
	}
	&.u-button-size-md {
		height: 2.25rem;
		width: 2.25rem;
	}
	&.u-button-size-lg {
		height: 2.911rem;
		width: 2.911rem;
	}
}

.u-button-shape-link {
	@extend .u-button-ghost;
	padding: 0;
	border: none;
	background: none;
	color: inherit;
	text-decoration: none !important;
}

.u-button-shape-link:hover {
	color: var(--tblr-btn-color) !important;
	background-color: transparent !important;
	text-decoration: underline !important;
}

.u-button-shape-round {
	@extend .btn-pill;
}

.u-button-shape-tile {
	border-radius: 0;
}

.u-button-size-sm {
	@extend .btn-sm;
}

.u-button-size-lg {
	@extend .btn-lg;
	@extend .gap-3;
}

@each $key, $value in $theme-colors {
	.u-button-color-#{$key} {
		@extend .btn-#{$key};
	}
	.u-button-color-#{$key}.u-button-outline {
		@extend .btn-outline-#{$key};
		--tblr-btn-color: #{$value};
		--tblr-btn-hover-color: #{$value};
		--tblr-btn-bg: transparent;
		--tblr-btn-hover-bg: #{color.adjust($value, $alpha: -0.9)};
	}
	.u-button-color-#{$key}.u-button-ghost {
		@extend .btn-ghost-#{$key};
		--tblr-btn-color: #{$value};
		--tblr-btn-hover-color: #{$value};
		--tblr-btn-bg: transparent;
		--tblr-btn-hover-bg: #{color.adjust($value, $alpha: -0.9)};
		--tblr-btn-hover-border-color: transparent;
	}
}

.u-button > .u-icon {
	color: inherit;
	margin: 0 !important;
}

// TODO: remove u-button-icon
.u-button-icon > .u-icon {
	margin: 0 !important;
}

.u-button > .u-avatar {
	margin: 0 !important;
}

@each $key, $value in $sizes {
	.u-button-size-#{$key} {
		$padding: calc($value / map-get($sizes-ratio, $key));
		& > .u-icon {
			font-size: $value;
			width: $value;
			height: $value;
			min-width: $value;
			margin: 0 calc($value / 2.5) 0 calc($value / -10);
		}
		&.u-button-icon {
			padding-right: $padding;
			padding-left: $padding;
		}
	}
}

.u-button-group {
	display: inline-flex;
	flex-wrap: nowrap;
	gap: 0.5rem;
	.u-button:active,
	.u-button:focus,
	.u-button:hover {
		z-index: 1;
	}
}

.u-button-group-compact {
	gap: 0;
}

.u-button-group-wrap {
	flex-wrap: wrap;
}

.u-button-group-vertical {
	flex-direction: column;
	&.u-button-group-compact {
		& > .u-button:not(:first-of-type) {
			margin-top: -1px;
		}
		& > .u-button:not(:first-of-type) {
			border-top-left-radius: 0;
			border-top-right-radius: 0;
		}
		& > .u-button:not(:last-child) {
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
}

.u-button-group-horizontal {
	flex-direction: row;
	&.u-button-group-compact {
		& > .u-button:not(:first-of-type) {
			margin-inline-start: -1px;
		}
		& > .u-button:not(:first-of-type) {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
		& > .u-button:not(:last-child) {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
}
