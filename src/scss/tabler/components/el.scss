$prefix-el: $prefix + 'el';

$opacities: (
    10: .1,
    25: .25,
    50: .5,
    75: .75,
    100: 1) !default;
$text-opacities: (
    25: .25,
    50: .5,
    75: .75,
    100: 1) !default;
$border-sizes: (
    '0',
    '1',
    '2',
    '3',
    '4',
    '5') !default;
$border-round-sizes: (
    '0',
    '1',
    '2',
    '3') !default;
$border-positions: (
    'top',
    'start',
    'end',
    'bottom') !default;
$border-radius-positions: (
    'top',
    'start',
    'end',
    'bottom',
    'circle',
    'pill') !default;
$padding-sizes: (
    '0',
    '1',
    '2',
    '3',
    '4',
    '5') !default;
$top-position: (
    '0',
    '50',
    '100') !default;
$bottom-position: (
    '0',
    '50',
    '100') !default;
$start-position: (
    '0',
    '50',
    '100') !default;
$end-position: (
    '0',
    '50',
    '100') !default;
$padding-positions: (
    't': 't',
    's': 's',
    'e': 'e',
    'b': 'b',
    'x': 'x',
    'y': 'y'
    ) !default;
$margin-sizes: (
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    'auto') !default;
$margin-positions: (
    't': 't',
    's': 's',
    'e': 'e',
    'b': 'b',
    'x': 'x',
    'y': 'y',
    ) !default;

$gap-sizes: (
    '0',
    '1',
    '2',
    '3',
    '4',
    '5') !default;

$shadow-sizes: (
    'none',
    'sm',
    'lg') !default;

$width-height-sizes: (
    '25',
    '50',
    '75',
    '100',
    'auto') !default;

$displays: (
    'none',
    'inline',
    'inline-block',
    'block',
    'grid',
    'table-cell',
    'table-row',
    'flex',
    'inline-flex',
    'table'
    ) !default;

$displays-sizes: (
    'sm',
    'md',
    'lg',
    'xl',
    'xxl') !default;

$col-sizes: (
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '10',
    '11',
    '12',
    'auto'
);
$breakpoints: (
    'sm',
    'md',
    'lg',
    'xl',
    'xxl'
);

$positions: (
    'static',
    'relative',
    'absolute',
    'fixed',
    'sticky') !default;

$overflow-types: (
    'auto',
    'hidden',
    'visible',
    'scroll') !default;

$translate-middle-types: (
    'x',
    'y') !default;

$float-positions: (
    'start',
    'end',
    'none') !default;

$heading-display-sizes: (
    '1',
    '2',
    '3',
    '4',
    '5',
    '6') !default;

.border {
    border-width: var(--#{$prefix}border-width) !important;
}

$text-aligns: (
    'start',
    'center',
    'end') !default;

$row-cols-sizes: 1,
    2,
    3,
    4,
    5,
    6 !default;

$container-breakpoints: (
    null,
    fluid,
    sm,
    md,
    lg,
    xl,
    xxl
);

$props: (
    bg-gradient: '.bg-gradient',
    border: '.border',
    max-width-100: '.mw-100',
    max-height-100: '.mh-100',
    row: (null: '.row',
        deck: '.row' '.row-deck'),
    show: '.show',
    lead: '.lead',
    blockquote: '.blockquote',
    container: (generate_props($container-breakpoints, ('.container-')))
);

.#{$prefix-el} {

    &-col {
        @extend .col;

        @each $size in $col-sizes {
            &-#{$size} {
                @extend .col-#{$size};
            }

            @each $breakpoint in $breakpoints {
                &-#{$breakpoint}-#{$size} {
                    @extend .col-#{$breakpoint}-#{$size};
                }
            }
        }
    }

    &-offset {
        @each $breakpoint in $breakpoints {
            @each $size in $col-sizes {
                &-#{$breakpoint}-#{$size} {
                    @extend .offset-#{$breakpoint}-#{$size} !optional;
                }

                &-#{$size} {
                    @extend .offset-#{$breakpoint}-#{$size} !optional;
                }
            }
        }
    }

    &-text-align {
        @each $text-align in $text-aligns {
            @each $breakpoint in $breakpoints {
                &-#{$breakpoint}-#{$text-align} {
                    @extend .offset-#{$breakpoint}-#{$text-align} !optional;
                }
            }

            &-#{$text-align} {
                @extend .text-#{$text-align} !optional;
            }
        }
    }

    @each $size in $heading-display-sizes {
        &-heading-display-size-#{$size} {
            @extend .display-#{$size};
        }
    }

    @each $key,
    $value in $theme_colors {
        &-bg-color-#{$key} {
            @extend .bg-#{$key};
        }

        &-border-color-#{$key} {
            @extend .border-#{$key};
        }
    }

    @each $key,
    $value in $theme_colors {
        &-text-color-#{$key} {
            @extend .text-#{$key};
        }
    }

    &-text-truncate {
        @extend .text-truncate;
    }

    @each $key,
    $value in $opacities {
        &-bg-opacity-#{$key} {
            --#{$prefix}bg-opacity: #{$value};
            @extend .bg-opacity-#{$key};
        }

        &-bg-border-opacity-#{$key} {
            @extend .border;
            @extend .border-opacity-#{$key};
        }
    }

    @each $key,
    $value in $text-opacities {
        &-text-opacity-#{$key} {
            @extend .text-opacity-#{$key};
        }
    }

    @each $display in $displays {
        @each $size in $displays-sizes {
            &-display-#{$size}-#{$display} {
                @extend .d-#{$size}-#{$display};
            }
        }

        &-display-#{$display} {
            @extend .d-#{$display};
        }

        &-print-#{$display} {
            @extend .d-print-#{$display};
        }
    }

    @each $size in $border-sizes {
        &-border-#{$size} {
            --#{$prefix}border-width: #{$size}px;
            @extend .border;
            @extend .border-#{$size};
        }
    }

    @each $position in $border-positions {
        &-border-#{$position} {
            @extend .border-#{$position};
        }

        @each $size in $border-sizes {
            &-border-#{$position}-#{$size} {
                @extend .border-#{$position}-0;
            }
        }

        &-border-#{$position}-0 {
            @extend .border-#{$position}-0;
        }
    }

    @each $position in $border-radius-positions {
        &-border-radius-#{$position} {
            @extend .rounded-#{$position};
        }
    }

    @each $size in $border-round-sizes {
        &-border-round-size-#{$size} {
            @extend .rounded-#{$size};
        }
    }

    @each $size in $width-height-sizes {
        &-w-#{$size} {
            @extend .w-#{$size};
        }

        &-h-#{$size} {
            @extend .h-#{$size};
        }
    }

    @each $size in $padding-sizes {
        &-p-#{$size} {
            @extend .p-#{$size};
        }

        @each $position,
        $value in $padding-positions {
            &-p#{$position}-#{$size} {
                @extend .p#{$value}-#{$size};
            }
        }
    }

    @each $size in $margin-sizes {
        &-m-#{$size} {
            @extend .m-#{$size};
        }

        @each $position,
        $value in $margin-positions {
            &-m#{$position}-#{$size} {
                @extend .m#{$value}-#{$size};
            }
        }
    }


    @each $size in $gap-sizes {
        &-gap-#{$size} {
            @extend .gap-#{$size};
        }
    }


    @each $size in $shadow-sizes {
        &-shadow-#{$size} {
            @extend .shadow-#{$size};
        }
    }

    @each $overflow in $overflow-types {
        &-overflow-#{$overflow} {
            @extend .overflow-#{$overflow};
        }
    }

    @each $position in $top-position {
        &-top-#{$position} {
            @extend .top-#{$position};
        }
    }

    @each $position in $bottom-position {
        &-bottom-#{$position} {
            @extend .bottom-#{$position};
        }
    }

    @each $position in $start-position {
        &-start-#{$position} {
            @extend .start-#{$position};
        }
    }

    @each $position in $end-position {
        &-end-#{$position} {
            @extend .end-#{$position};
        }
    }

    @each $position in $positions {
        &-position-#{$position} {
            @extend .position-#{$position};
        }
    }

    @each $translate in $translate-middle-types {
        &-translate-middle-xy {
            @extend .translate-middle;
        }

        &-translate-middle-#{$translate} {
            @extend .translate-middle-#{$translate};
        }
    }

    &-hidden {
        @extend .invisible;
    }

    @each $position in $float-positions {
        &-float-#{$position} {
            @extend .float-#{$position};
        }

        @each $size in $displays-sizes {
            &-float-#{$size}-#{$position} {
                @extend .float-#{$size}-#{$position};
            }
        }
    }

    &-row {
        @extend .row;

        @each $size in $row-cols-sizes {
            &-cols-#{$size} {
                @extend .row-cols-#{$size};
            }

            @each $breakpoint in $breakpoints {
                &-cols-#{$breakpoint}-#{$size} {
                    @extend .row-cols-#{$breakpoint}-#{$size};
                }
            }
        }
    }


    @include apply-props($props);
}